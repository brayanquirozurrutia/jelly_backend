version: '3.9'

services:
  web:
    build: ./jelly_backend
    command: gunicorn --bind 0.0.0.0:8000 jelly_backend.wsgi:application
    volumes:
      - ./jelly_backend:/app
    ports:
      - "8000:8000"
    environment:
      DJANGO_ENV: ${DJANGO_ENV}
      SECRET_KEY: ${SECRET_KEY}
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      - rabbitmq
    env_file:
      - .env  # Asegúrate de que este archivo exista en la raíz del proyecto jelly_backend
    networks:
      - jelly_network

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - jelly_network

  celery:
    build: ./jelly_backend
    command: celery -A jelly_backend worker --loglevel=info
    volumes:
      - ./jelly_backend:/app
    depends_on:
      - rabbitmq
    environment:
      DJANGO_ENV: development
      SECRET_KEY: ${SECRET_KEY}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
    env_file:
      - .env  # Asegúrate de que este archivo exista en la raíz del proyecto jelly_backend
    networks:
      - jelly_network

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./staticfiles:/usr/share/nginx/html/static
      - /etc/letsencrypt:/etc/letsencrypt
      - /root/.htpasswd:/etc/nginx/.htpasswd
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
      - frontend
    networks:
      - jelly_network

  frontend:
    build: ./jelly_frontend
    ports:
      - "3001:80"
    networks:
      - jelly_network
    env_file:
      - .env.production  # Asegúrate de que este archivo exista en la raíz del proyecto jelly_frontend

networks:
  jelly_network:
